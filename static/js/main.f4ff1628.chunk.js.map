{"version":3,"sources":["components/landingpage.js","components/contact.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","Contact","fontSize","fontFamily","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","border","colored","name","toggleCategories","Main","exact","path","component","LandingPage","landingpage","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4ff1628.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return(\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n        <Grid className=\"landing-grid\">\r\n          <Cell col={12}>\r\n            <img\r\n              src=\"https://pbs.twimg.com/profile_images/1260778441181466624/tHSVEuZA_400x400.jpg\"\r\n              alt=\"avatar\"\r\n              className=\"avatar-img\"\r\n              />\r\n\r\n            <div className=\"banner-text\">\r\n              <h1>Jr. Web Developer</h1>\r\n            <hr/>\r\n\r\n          <p>HTML/CSS | Bootstrap | JavaScript | React | NodeJS</p>\r\n\r\n        <div className=\"social-links\">\r\n\r\n          {/* LinkedIn */}\r\n          <a href=\"https://www.linkedin.com/in/andrew-souza-4a31aa1a2/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n          {/* Github */}\r\n          <a href=\"https://github.com/drewmargielaa\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n          {/* Freecodecamp */}\r\n          <a href=\"https://www.freecodecamp.org/drewmargielaa\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <i className=\"fa fa-free-code-camp\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n        </div>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl';\r\n\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"contact-body\">\r\n        <Grid className=\"contact-grid\">\r\n          <Cell col={6}>\r\n            <h2>Andrew Souza</h2>\r\n          </Cell>\r\n          <Cell col={6}>\r\n            <h2>Contact Me</h2>\r\n            <hr/>\r\n\r\n            <div className=\"contact-list\">\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\r\n                    <i className=\"fa fa-fax\" aria-hidden=\"true\"/>\r\n                    (201) 702-0000\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n                <ListItem>\r\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\r\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>\r\n                    drewmargielaa@gmail.com\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n              </List>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Tabs, Tab, Grid, Cell, Card, CardTitle, CardText, CardActions, Button, CardMenu, IconButton } from 'react-mdl';\r\n\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: 0 };\r\n  }\r\n\r\n  toggleCategories() {\r\n\r\n    if(this.state.activeTab === 0){\r\n      return(\r\n        <div className=\"projects-grid\">\r\n          {/* Project 1 */}\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle style={{color: '#fff', height: '176px', background: 'Url(https://media.foxbusiness.com/BrightCove/854081161001/202007/1980/854081161001_6175603332001_6175603487001-vs.jpg) center / cover'}} >New York Mock Exchange</CardTitle>\r\n            <CardText>\r\n              Practice Trading Stocks\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button colored>GitHub</Button>\r\n            </CardActions>\r\n            <CardMenu style={{color: '#fff'}}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n\r\n          {/* Project 2 */}\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://i.ytimg.com/vi/r7zd2noASo8/maxresdefault.jpg)center / cover'}} >Note-Taker</CardTitle>\r\n            <CardText>\r\n              Take and save notes\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button colored>GitHub</Button>\r\n            </CardActions>\r\n            <CardMenu style={{color: '#fff'}}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n\r\n          {/* Project 3 */}\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://s7d2.scene7.com/is/image/TWCNews/rainbow-lake-brantley)center / cover'}} >Weather App</CardTitle>\r\n            <CardText>\r\n              Shows weather data for selected city\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button colored>GitHub</Button>\r\n            </CardActions>\r\n            <CardMenu style={{color: '#fff'}}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://user-images.githubusercontent.com/98482/84171218-327e7a80-aa40-11ea-8cd1-5177fc2d0e72.png)center / cover'}} >ReadMe Generator</CardTitle>\r\n            <CardText>\r\n              Generate a ReadMe From Node J.s Cli\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button colored>GitHub</Button>\r\n            </CardActions>\r\n            <CardMenu style={{color: '#fff'}}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://i.pcmag.com/imagery/articles/04Uac9ZA9dH1zEKUiIv0nOu-7.fit_scale.size_950x532.v1569489914.jpg)center / cover'}} >Password Generator</CardTitle>\r\n            <CardText>\r\n              Generates a random password\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button colored>GitHub</Button>\r\n            </CardActions>\r\n            <CardMenu style={{color: '#fff'}}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n        </div>\r\n\r\n\r\n      )\r\n    } else if(this.state.activeTab === 1) {\r\n      return (\r\n        <div><h1>This is Angular</h1></div>\r\n      )\r\n    } else if(this.state.activeTab === 2) {\r\n      return (\r\n        <div><h1>This is VueJS</h1></div>\r\n      )\r\n    } else if(this.state.activeTab === 3) {\r\n      return (\r\n        <div><h1>This is MongoDB</h1></div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n          <Grid>\r\n            <Cell col={12}>\r\n              <div className=\"content\">{this.toggleCategories()}</div>\r\n            </Cell>\r\n          </Grid>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport LandingPage from \"./landingpage\";\r\nimport landingpage from './landingpage';\r\nimport Contact from './contact';\r\nimport Projects from './projects';\r\n\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/landingpage\" component={landingpage} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n        <Route path=\"/projects\" component={Projects} />\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className=\"header-color\" title=\"Andrew's Portfolio\" scroll>\n            <Navigation>\n                <Link to=\"/landingpage\">Home</Link>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Menu\">\n            <Navigation>\n                <Link to=\"/landingpage\">Home</Link>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}